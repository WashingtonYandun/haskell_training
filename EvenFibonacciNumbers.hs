{-
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
-}
isEven :: Int -> Bool
isEven x = x `mod` 2 == 0 

fib :: Int -> Int
fib 0 = 1 -- base case 
fib 1 = 2 -- base case
fib n = fib (n-1) + fib (n-2)

fibList :: [Int]
fibList = takeWhile (<= 4000000) [fib x | x <- [0..]]

res = sum [x | x <- fibList, isEven x]

main = print res -- 4613732